// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: problem.proto

package icepackai.problem;

public final class Problem {
  private Problem() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ProblemEnvelopeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:problem.ProblemEnvelope)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required string type = 1;</code>
     */
    java.lang.String getType();
    /**
     * <code>required string type = 1;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>required .problem.ProblemEnvelope.SubType subType = 2 [default = INPUT];</code>
     */
    boolean hasSubType();
    /**
     * <code>required .problem.ProblemEnvelope.SubType subType = 2 [default = INPUT];</code>
     */
    icepackai.problem.Problem.ProblemEnvelope.SubType getSubType();

    /**
     * <code>optional bytes content = 3;</code>
     */
    boolean hasContent();
    /**
     * <code>optional bytes content = 3;</code>
     */
    com.google.protobuf.ByteString getContent();
  }
  /**
   * Protobuf type {@code problem.ProblemEnvelope}
   */
  public  static final class ProblemEnvelope extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:problem.ProblemEnvelope)
      ProblemEnvelopeOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ProblemEnvelope.newBuilder() to construct.
    private ProblemEnvelope(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ProblemEnvelope() {
      type_ = "";
      subType_ = 0;
      content_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ProblemEnvelope(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              type_ = bs;
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              icepackai.problem.Problem.ProblemEnvelope.SubType value = icepackai.problem.Problem.ProblemEnvelope.SubType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                subType_ = rawValue;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000004;
              content_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return icepackai.problem.Problem.internal_static_problem_ProblemEnvelope_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return icepackai.problem.Problem.internal_static_problem_ProblemEnvelope_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              icepackai.problem.Problem.ProblemEnvelope.class, icepackai.problem.Problem.ProblemEnvelope.Builder.class);
    }

    /**
     * Protobuf enum {@code problem.ProblemEnvelope.SubType}
     */
    public enum SubType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INPUT = 0;</code>
       */
      INPUT(0),
      /**
       * <code>OUTPUT = 1;</code>
       */
      OUTPUT(1),
      ;

      /**
       * <code>INPUT = 0;</code>
       */
      public static final int INPUT_VALUE = 0;
      /**
       * <code>OUTPUT = 1;</code>
       */
      public static final int OUTPUT_VALUE = 1;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SubType valueOf(int value) {
        return forNumber(value);
      }

      public static SubType forNumber(int value) {
        switch (value) {
          case 0: return INPUT;
          case 1: return OUTPUT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SubType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SubType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SubType>() {
              public SubType findValueByNumber(int number) {
                return SubType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return icepackai.problem.Problem.ProblemEnvelope.getDescriptor().getEnumTypes().get(0);
      }

      private static final SubType[] VALUES = values();

      public static SubType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SubType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:problem.ProblemEnvelope.SubType)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private volatile java.lang.Object type_;
    /**
     * <code>required string type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string type = 1;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBTYPE_FIELD_NUMBER = 2;
    private int subType_;
    /**
     * <code>required .problem.ProblemEnvelope.SubType subType = 2 [default = INPUT];</code>
     */
    public boolean hasSubType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .problem.ProblemEnvelope.SubType subType = 2 [default = INPUT];</code>
     */
    public icepackai.problem.Problem.ProblemEnvelope.SubType getSubType() {
      @SuppressWarnings("deprecation")
      icepackai.problem.Problem.ProblemEnvelope.SubType result = icepackai.problem.Problem.ProblemEnvelope.SubType.valueOf(subType_);
      return result == null ? icepackai.problem.Problem.ProblemEnvelope.SubType.INPUT : result;
    }

    public static final int CONTENT_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString content_;
    /**
     * <code>optional bytes content = 3;</code>
     */
    public boolean hasContent() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional bytes content = 3;</code>
     */
    public com.google.protobuf.ByteString getContent() {
      return content_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSubType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, subType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, content_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, subType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, content_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof icepackai.problem.Problem.ProblemEnvelope)) {
        return super.equals(obj);
      }
      icepackai.problem.Problem.ProblemEnvelope other = (icepackai.problem.Problem.ProblemEnvelope) obj;

      boolean result = true;
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && getType()
            .equals(other.getType());
      }
      result = result && (hasSubType() == other.hasSubType());
      if (hasSubType()) {
        result = result && subType_ == other.subType_;
      }
      result = result && (hasContent() == other.hasContent());
      if (hasContent()) {
        result = result && getContent()
            .equals(other.getContent());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + getType().hashCode();
      }
      if (hasSubType()) {
        hash = (37 * hash) + SUBTYPE_FIELD_NUMBER;
        hash = (53 * hash) + subType_;
      }
      if (hasContent()) {
        hash = (37 * hash) + CONTENT_FIELD_NUMBER;
        hash = (53 * hash) + getContent().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static icepackai.problem.Problem.ProblemEnvelope parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static icepackai.problem.Problem.ProblemEnvelope parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(icepackai.problem.Problem.ProblemEnvelope prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code problem.ProblemEnvelope}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:problem.ProblemEnvelope)
        icepackai.problem.Problem.ProblemEnvelopeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return icepackai.problem.Problem.internal_static_problem_ProblemEnvelope_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return icepackai.problem.Problem.internal_static_problem_ProblemEnvelope_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                icepackai.problem.Problem.ProblemEnvelope.class, icepackai.problem.Problem.ProblemEnvelope.Builder.class);
      }

      // Construct using icepackai.problem.Problem.ProblemEnvelope.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        subType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        content_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return icepackai.problem.Problem.internal_static_problem_ProblemEnvelope_descriptor;
      }

      @java.lang.Override
      public icepackai.problem.Problem.ProblemEnvelope getDefaultInstanceForType() {
        return icepackai.problem.Problem.ProblemEnvelope.getDefaultInstance();
      }

      @java.lang.Override
      public icepackai.problem.Problem.ProblemEnvelope build() {
        icepackai.problem.Problem.ProblemEnvelope result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public icepackai.problem.Problem.ProblemEnvelope buildPartial() {
        icepackai.problem.Problem.ProblemEnvelope result = new icepackai.problem.Problem.ProblemEnvelope(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.subType_ = subType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.content_ = content_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof icepackai.problem.Problem.ProblemEnvelope) {
          return mergeFrom((icepackai.problem.Problem.ProblemEnvelope)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(icepackai.problem.Problem.ProblemEnvelope other) {
        if (other == icepackai.problem.Problem.ProblemEnvelope.getDefaultInstance()) return this;
        if (other.hasType()) {
          bitField0_ |= 0x00000001;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasSubType()) {
          setSubType(other.getSubType());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasType()) {
          return false;
        }
        if (!hasSubType()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        icepackai.problem.Problem.ProblemEnvelope parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (icepackai.problem.Problem.ProblemEnvelope) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object type_ = "";
      /**
       * <code>required string type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string type = 1;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string type = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string type = 1;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>required string type = 1;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }

      private int subType_ = 0;
      /**
       * <code>required .problem.ProblemEnvelope.SubType subType = 2 [default = INPUT];</code>
       */
      public boolean hasSubType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .problem.ProblemEnvelope.SubType subType = 2 [default = INPUT];</code>
       */
      public icepackai.problem.Problem.ProblemEnvelope.SubType getSubType() {
        @SuppressWarnings("deprecation")
        icepackai.problem.Problem.ProblemEnvelope.SubType result = icepackai.problem.Problem.ProblemEnvelope.SubType.valueOf(subType_);
        return result == null ? icepackai.problem.Problem.ProblemEnvelope.SubType.INPUT : result;
      }
      /**
       * <code>required .problem.ProblemEnvelope.SubType subType = 2 [default = INPUT];</code>
       */
      public Builder setSubType(icepackai.problem.Problem.ProblemEnvelope.SubType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        subType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .problem.ProblemEnvelope.SubType subType = 2 [default = INPUT];</code>
       */
      public Builder clearSubType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        subType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString content_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes content = 3;</code>
       */
      public boolean hasContent() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes content = 3;</code>
       */
      public com.google.protobuf.ByteString getContent() {
        return content_;
      }
      /**
       * <code>optional bytes content = 3;</code>
       */
      public Builder setContent(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        content_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes content = 3;</code>
       */
      public Builder clearContent() {
        bitField0_ = (bitField0_ & ~0x00000004);
        content_ = getDefaultInstance().getContent();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:problem.ProblemEnvelope)
    }

    // @@protoc_insertion_point(class_scope:problem.ProblemEnvelope)
    private static final icepackai.problem.Problem.ProblemEnvelope DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new icepackai.problem.Problem.ProblemEnvelope();
    }

    public static icepackai.problem.Problem.ProblemEnvelope getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ProblemEnvelope>
        PARSER = new com.google.protobuf.AbstractParser<ProblemEnvelope>() {
      @java.lang.Override
      public ProblemEnvelope parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ProblemEnvelope(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ProblemEnvelope> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ProblemEnvelope> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public icepackai.problem.Problem.ProblemEnvelope getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SolverInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:problem.SolverInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int64 unixDateTime = 1;</code>
     */
    boolean hasUnixDateTime();
    /**
     * <code>required int64 unixDateTime = 1;</code>
     */
    long getUnixDateTime();

    /**
     * <code>required string infoMessage = 2;</code>
     */
    boolean hasInfoMessage();
    /**
     * <code>required string infoMessage = 2;</code>
     */
    java.lang.String getInfoMessage();
    /**
     * <code>required string infoMessage = 2;</code>
     */
    com.google.protobuf.ByteString
        getInfoMessageBytes();

    /**
     * <code>required .problem.SolverInfo.SolverMessageType type = 3;</code>
     */
    boolean hasType();
    /**
     * <code>required .problem.SolverInfo.SolverMessageType type = 3;</code>
     */
    icepackai.problem.Problem.SolverInfo.SolverMessageType getType();
  }
  /**
   * Protobuf type {@code problem.SolverInfo}
   */
  public  static final class SolverInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:problem.SolverInfo)
      SolverInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SolverInfo.newBuilder() to construct.
    private SolverInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SolverInfo() {
      unixDateTime_ = 0L;
      infoMessage_ = "";
      type_ = 0;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SolverInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              bitField0_ |= 0x00000001;
              unixDateTime_ = input.readInt64();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              infoMessage_ = bs;
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              icepackai.problem.Problem.SolverInfo.SolverMessageType value = icepackai.problem.Problem.SolverInfo.SolverMessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                type_ = rawValue;
              }
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return icepackai.problem.Problem.internal_static_problem_SolverInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return icepackai.problem.Problem.internal_static_problem_SolverInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              icepackai.problem.Problem.SolverInfo.class, icepackai.problem.Problem.SolverInfo.Builder.class);
    }

    /**
     * Protobuf enum {@code problem.SolverInfo.SolverMessageType}
     */
    public enum SolverMessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>INFO = 0;</code>
       */
      INFO(0),
      /**
       * <code>WARNING = 1;</code>
       */
      WARNING(1),
      /**
       * <code>ERROR = 2;</code>
       */
      ERROR(2),
      ;

      /**
       * <code>INFO = 0;</code>
       */
      public static final int INFO_VALUE = 0;
      /**
       * <code>WARNING = 1;</code>
       */
      public static final int WARNING_VALUE = 1;
      /**
       * <code>ERROR = 2;</code>
       */
      public static final int ERROR_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SolverMessageType valueOf(int value) {
        return forNumber(value);
      }

      public static SolverMessageType forNumber(int value) {
        switch (value) {
          case 0: return INFO;
          case 1: return WARNING;
          case 2: return ERROR;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SolverMessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SolverMessageType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SolverMessageType>() {
              public SolverMessageType findValueByNumber(int number) {
                return SolverMessageType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return icepackai.problem.Problem.SolverInfo.getDescriptor().getEnumTypes().get(0);
      }

      private static final SolverMessageType[] VALUES = values();

      public static SolverMessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SolverMessageType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:problem.SolverInfo.SolverMessageType)
    }

    private int bitField0_;
    public static final int UNIXDATETIME_FIELD_NUMBER = 1;
    private long unixDateTime_;
    /**
     * <code>required int64 unixDateTime = 1;</code>
     */
    public boolean hasUnixDateTime() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int64 unixDateTime = 1;</code>
     */
    public long getUnixDateTime() {
      return unixDateTime_;
    }

    public static final int INFOMESSAGE_FIELD_NUMBER = 2;
    private volatile java.lang.Object infoMessage_;
    /**
     * <code>required string infoMessage = 2;</code>
     */
    public boolean hasInfoMessage() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string infoMessage = 2;</code>
     */
    public java.lang.String getInfoMessage() {
      java.lang.Object ref = infoMessage_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          infoMessage_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string infoMessage = 2;</code>
     */
    public com.google.protobuf.ByteString
        getInfoMessageBytes() {
      java.lang.Object ref = infoMessage_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        infoMessage_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_;
    /**
     * <code>required .problem.SolverInfo.SolverMessageType type = 3;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .problem.SolverInfo.SolverMessageType type = 3;</code>
     */
    public icepackai.problem.Problem.SolverInfo.SolverMessageType getType() {
      @SuppressWarnings("deprecation")
      icepackai.problem.Problem.SolverInfo.SolverMessageType result = icepackai.problem.Problem.SolverInfo.SolverMessageType.valueOf(type_);
      return result == null ? icepackai.problem.Problem.SolverInfo.SolverMessageType.INFO : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasUnixDateTime()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasInfoMessage()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt64(1, unixDateTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, infoMessage_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, type_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, unixDateTime_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, infoMessage_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof icepackai.problem.Problem.SolverInfo)) {
        return super.equals(obj);
      }
      icepackai.problem.Problem.SolverInfo other = (icepackai.problem.Problem.SolverInfo) obj;

      boolean result = true;
      result = result && (hasUnixDateTime() == other.hasUnixDateTime());
      if (hasUnixDateTime()) {
        result = result && (getUnixDateTime()
            == other.getUnixDateTime());
      }
      result = result && (hasInfoMessage() == other.hasInfoMessage());
      if (hasInfoMessage()) {
        result = result && getInfoMessage()
            .equals(other.getInfoMessage());
      }
      result = result && (hasType() == other.hasType());
      if (hasType()) {
        result = result && type_ == other.type_;
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasUnixDateTime()) {
        hash = (37 * hash) + UNIXDATETIME_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUnixDateTime());
      }
      if (hasInfoMessage()) {
        hash = (37 * hash) + INFOMESSAGE_FIELD_NUMBER;
        hash = (53 * hash) + getInfoMessage().hashCode();
      }
      if (hasType()) {
        hash = (37 * hash) + TYPE_FIELD_NUMBER;
        hash = (53 * hash) + type_;
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static icepackai.problem.Problem.SolverInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static icepackai.problem.Problem.SolverInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static icepackai.problem.Problem.SolverInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static icepackai.problem.Problem.SolverInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static icepackai.problem.Problem.SolverInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static icepackai.problem.Problem.SolverInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static icepackai.problem.Problem.SolverInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static icepackai.problem.Problem.SolverInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static icepackai.problem.Problem.SolverInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static icepackai.problem.Problem.SolverInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static icepackai.problem.Problem.SolverInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static icepackai.problem.Problem.SolverInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(icepackai.problem.Problem.SolverInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code problem.SolverInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:problem.SolverInfo)
        icepackai.problem.Problem.SolverInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return icepackai.problem.Problem.internal_static_problem_SolverInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return icepackai.problem.Problem.internal_static_problem_SolverInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                icepackai.problem.Problem.SolverInfo.class, icepackai.problem.Problem.SolverInfo.Builder.class);
      }

      // Construct using icepackai.problem.Problem.SolverInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        unixDateTime_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000001);
        infoMessage_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        type_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return icepackai.problem.Problem.internal_static_problem_SolverInfo_descriptor;
      }

      @java.lang.Override
      public icepackai.problem.Problem.SolverInfo getDefaultInstanceForType() {
        return icepackai.problem.Problem.SolverInfo.getDefaultInstance();
      }

      @java.lang.Override
      public icepackai.problem.Problem.SolverInfo build() {
        icepackai.problem.Problem.SolverInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public icepackai.problem.Problem.SolverInfo buildPartial() {
        icepackai.problem.Problem.SolverInfo result = new icepackai.problem.Problem.SolverInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.unixDateTime_ = unixDateTime_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.infoMessage_ = infoMessage_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.type_ = type_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof icepackai.problem.Problem.SolverInfo) {
          return mergeFrom((icepackai.problem.Problem.SolverInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(icepackai.problem.Problem.SolverInfo other) {
        if (other == icepackai.problem.Problem.SolverInfo.getDefaultInstance()) return this;
        if (other.hasUnixDateTime()) {
          setUnixDateTime(other.getUnixDateTime());
        }
        if (other.hasInfoMessage()) {
          bitField0_ |= 0x00000002;
          infoMessage_ = other.infoMessage_;
          onChanged();
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasUnixDateTime()) {
          return false;
        }
        if (!hasInfoMessage()) {
          return false;
        }
        if (!hasType()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        icepackai.problem.Problem.SolverInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (icepackai.problem.Problem.SolverInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private long unixDateTime_ ;
      /**
       * <code>required int64 unixDateTime = 1;</code>
       */
      public boolean hasUnixDateTime() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int64 unixDateTime = 1;</code>
       */
      public long getUnixDateTime() {
        return unixDateTime_;
      }
      /**
       * <code>required int64 unixDateTime = 1;</code>
       */
      public Builder setUnixDateTime(long value) {
        bitField0_ |= 0x00000001;
        unixDateTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int64 unixDateTime = 1;</code>
       */
      public Builder clearUnixDateTime() {
        bitField0_ = (bitField0_ & ~0x00000001);
        unixDateTime_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object infoMessage_ = "";
      /**
       * <code>required string infoMessage = 2;</code>
       */
      public boolean hasInfoMessage() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string infoMessage = 2;</code>
       */
      public java.lang.String getInfoMessage() {
        java.lang.Object ref = infoMessage_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            infoMessage_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string infoMessage = 2;</code>
       */
      public com.google.protobuf.ByteString
          getInfoMessageBytes() {
        java.lang.Object ref = infoMessage_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          infoMessage_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string infoMessage = 2;</code>
       */
      public Builder setInfoMessage(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        infoMessage_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string infoMessage = 2;</code>
       */
      public Builder clearInfoMessage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        infoMessage_ = getDefaultInstance().getInfoMessage();
        onChanged();
        return this;
      }
      /**
       * <code>required string infoMessage = 2;</code>
       */
      public Builder setInfoMessageBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        infoMessage_ = value;
        onChanged();
        return this;
      }

      private int type_ = 0;
      /**
       * <code>required .problem.SolverInfo.SolverMessageType type = 3;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .problem.SolverInfo.SolverMessageType type = 3;</code>
       */
      public icepackai.problem.Problem.SolverInfo.SolverMessageType getType() {
        @SuppressWarnings("deprecation")
        icepackai.problem.Problem.SolverInfo.SolverMessageType result = icepackai.problem.Problem.SolverInfo.SolverMessageType.valueOf(type_);
        return result == null ? icepackai.problem.Problem.SolverInfo.SolverMessageType.INFO : result;
      }
      /**
       * <code>required .problem.SolverInfo.SolverMessageType type = 3;</code>
       */
      public Builder setType(icepackai.problem.Problem.SolverInfo.SolverMessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .problem.SolverInfo.SolverMessageType type = 3;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:problem.SolverInfo)
    }

    // @@protoc_insertion_point(class_scope:problem.SolverInfo)
    private static final icepackai.problem.Problem.SolverInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new icepackai.problem.Problem.SolverInfo();
    }

    public static icepackai.problem.Problem.SolverInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SolverInfo>
        PARSER = new com.google.protobuf.AbstractParser<SolverInfo>() {
      @java.lang.Override
      public SolverInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SolverInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SolverInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SolverInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public icepackai.problem.Problem.SolverInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SolverResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:problem.SolverResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .problem.SolverInfo logs = 1;</code>
     */
    java.util.List<icepackai.problem.Problem.SolverInfo> 
        getLogsList();
    /**
     * <code>repeated .problem.SolverInfo logs = 1;</code>
     */
    icepackai.problem.Problem.SolverInfo getLogs(int index);
    /**
     * <code>repeated .problem.SolverInfo logs = 1;</code>
     */
    int getLogsCount();
    /**
     * <code>repeated .problem.SolverInfo logs = 1;</code>
     */
    java.util.List<? extends icepackai.problem.Problem.SolverInfoOrBuilder> 
        getLogsOrBuilderList();
    /**
     * <code>repeated .problem.SolverInfo logs = 1;</code>
     */
    icepackai.problem.Problem.SolverInfoOrBuilder getLogsOrBuilder(
        int index);

    /**
     * <code>required .problem.SolverResponse.SolveState state = 2;</code>
     */
    boolean hasState();
    /**
     * <code>required .problem.SolverResponse.SolveState state = 2;</code>
     */
    icepackai.problem.Problem.SolverResponse.SolveState getState();

    /**
     * <code>optional bytes solution = 3;</code>
     */
    boolean hasSolution();
    /**
     * <code>optional bytes solution = 3;</code>
     */
    com.google.protobuf.ByteString getSolution();
  }
  /**
   * Protobuf type {@code problem.SolverResponse}
   */
  public  static final class SolverResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:problem.SolverResponse)
      SolverResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SolverResponse.newBuilder() to construct.
    private SolverResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SolverResponse() {
      logs_ = java.util.Collections.emptyList();
      state_ = 0;
      solution_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SolverResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                logs_ = new java.util.ArrayList<icepackai.problem.Problem.SolverInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              logs_.add(
                  input.readMessage(icepackai.problem.Problem.SolverInfo.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
                @SuppressWarnings("deprecation")
              icepackai.problem.Problem.SolverResponse.SolveState value = icepackai.problem.Problem.SolverResponse.SolveState.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                state_ = rawValue;
              }
              break;
            }
            case 26: {
              bitField0_ |= 0x00000002;
              solution_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          logs_ = java.util.Collections.unmodifiableList(logs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return icepackai.problem.Problem.internal_static_problem_SolverResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return icepackai.problem.Problem.internal_static_problem_SolverResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              icepackai.problem.Problem.SolverResponse.class, icepackai.problem.Problem.SolverResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code problem.SolverResponse.SolveState}
     */
    public enum SolveState
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>WIP = 0;</code>
       */
      WIP(0),
      /**
       * <code>COMPLETED = 1;</code>
       */
      COMPLETED(1),
      /**
       * <code>FAILED = 2;</code>
       */
      FAILED(2),
      ;

      /**
       * <code>WIP = 0;</code>
       */
      public static final int WIP_VALUE = 0;
      /**
       * <code>COMPLETED = 1;</code>
       */
      public static final int COMPLETED_VALUE = 1;
      /**
       * <code>FAILED = 2;</code>
       */
      public static final int FAILED_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static SolveState valueOf(int value) {
        return forNumber(value);
      }

      public static SolveState forNumber(int value) {
        switch (value) {
          case 0: return WIP;
          case 1: return COMPLETED;
          case 2: return FAILED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<SolveState>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          SolveState> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<SolveState>() {
              public SolveState findValueByNumber(int number) {
                return SolveState.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return icepackai.problem.Problem.SolverResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final SolveState[] VALUES = values();

      public static SolveState valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private SolveState(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:problem.SolverResponse.SolveState)
    }

    private int bitField0_;
    public static final int LOGS_FIELD_NUMBER = 1;
    private java.util.List<icepackai.problem.Problem.SolverInfo> logs_;
    /**
     * <code>repeated .problem.SolverInfo logs = 1;</code>
     */
    public java.util.List<icepackai.problem.Problem.SolverInfo> getLogsList() {
      return logs_;
    }
    /**
     * <code>repeated .problem.SolverInfo logs = 1;</code>
     */
    public java.util.List<? extends icepackai.problem.Problem.SolverInfoOrBuilder> 
        getLogsOrBuilderList() {
      return logs_;
    }
    /**
     * <code>repeated .problem.SolverInfo logs = 1;</code>
     */
    public int getLogsCount() {
      return logs_.size();
    }
    /**
     * <code>repeated .problem.SolverInfo logs = 1;</code>
     */
    public icepackai.problem.Problem.SolverInfo getLogs(int index) {
      return logs_.get(index);
    }
    /**
     * <code>repeated .problem.SolverInfo logs = 1;</code>
     */
    public icepackai.problem.Problem.SolverInfoOrBuilder getLogsOrBuilder(
        int index) {
      return logs_.get(index);
    }

    public static final int STATE_FIELD_NUMBER = 2;
    private int state_;
    /**
     * <code>required .problem.SolverResponse.SolveState state = 2;</code>
     */
    public boolean hasState() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .problem.SolverResponse.SolveState state = 2;</code>
     */
    public icepackai.problem.Problem.SolverResponse.SolveState getState() {
      @SuppressWarnings("deprecation")
      icepackai.problem.Problem.SolverResponse.SolveState result = icepackai.problem.Problem.SolverResponse.SolveState.valueOf(state_);
      return result == null ? icepackai.problem.Problem.SolverResponse.SolveState.WIP : result;
    }

    public static final int SOLUTION_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString solution_;
    /**
     * <code>optional bytes solution = 3;</code>
     */
    public boolean hasSolution() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bytes solution = 3;</code>
     */
    public com.google.protobuf.ByteString getSolution() {
      return solution_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasState()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getLogsCount(); i++) {
        if (!getLogs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < logs_.size(); i++) {
        output.writeMessage(1, logs_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(2, state_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(3, solution_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < logs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, logs_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, state_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, solution_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof icepackai.problem.Problem.SolverResponse)) {
        return super.equals(obj);
      }
      icepackai.problem.Problem.SolverResponse other = (icepackai.problem.Problem.SolverResponse) obj;

      boolean result = true;
      result = result && getLogsList()
          .equals(other.getLogsList());
      result = result && (hasState() == other.hasState());
      if (hasState()) {
        result = result && state_ == other.state_;
      }
      result = result && (hasSolution() == other.hasSolution());
      if (hasSolution()) {
        result = result && getSolution()
            .equals(other.getSolution());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLogsCount() > 0) {
        hash = (37 * hash) + LOGS_FIELD_NUMBER;
        hash = (53 * hash) + getLogsList().hashCode();
      }
      if (hasState()) {
        hash = (37 * hash) + STATE_FIELD_NUMBER;
        hash = (53 * hash) + state_;
      }
      if (hasSolution()) {
        hash = (37 * hash) + SOLUTION_FIELD_NUMBER;
        hash = (53 * hash) + getSolution().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static icepackai.problem.Problem.SolverResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static icepackai.problem.Problem.SolverResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static icepackai.problem.Problem.SolverResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static icepackai.problem.Problem.SolverResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static icepackai.problem.Problem.SolverResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static icepackai.problem.Problem.SolverResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static icepackai.problem.Problem.SolverResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static icepackai.problem.Problem.SolverResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static icepackai.problem.Problem.SolverResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static icepackai.problem.Problem.SolverResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static icepackai.problem.Problem.SolverResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static icepackai.problem.Problem.SolverResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(icepackai.problem.Problem.SolverResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code problem.SolverResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:problem.SolverResponse)
        icepackai.problem.Problem.SolverResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return icepackai.problem.Problem.internal_static_problem_SolverResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return icepackai.problem.Problem.internal_static_problem_SolverResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                icepackai.problem.Problem.SolverResponse.class, icepackai.problem.Problem.SolverResponse.Builder.class);
      }

      // Construct using icepackai.problem.Problem.SolverResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLogsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (logsBuilder_ == null) {
          logs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          logsBuilder_.clear();
        }
        state_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        solution_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return icepackai.problem.Problem.internal_static_problem_SolverResponse_descriptor;
      }

      @java.lang.Override
      public icepackai.problem.Problem.SolverResponse getDefaultInstanceForType() {
        return icepackai.problem.Problem.SolverResponse.getDefaultInstance();
      }

      @java.lang.Override
      public icepackai.problem.Problem.SolverResponse build() {
        icepackai.problem.Problem.SolverResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public icepackai.problem.Problem.SolverResponse buildPartial() {
        icepackai.problem.Problem.SolverResponse result = new icepackai.problem.Problem.SolverResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (logsBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            logs_ = java.util.Collections.unmodifiableList(logs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.logs_ = logs_;
        } else {
          result.logs_ = logsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.state_ = state_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.solution_ = solution_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof icepackai.problem.Problem.SolverResponse) {
          return mergeFrom((icepackai.problem.Problem.SolverResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(icepackai.problem.Problem.SolverResponse other) {
        if (other == icepackai.problem.Problem.SolverResponse.getDefaultInstance()) return this;
        if (logsBuilder_ == null) {
          if (!other.logs_.isEmpty()) {
            if (logs_.isEmpty()) {
              logs_ = other.logs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureLogsIsMutable();
              logs_.addAll(other.logs_);
            }
            onChanged();
          }
        } else {
          if (!other.logs_.isEmpty()) {
            if (logsBuilder_.isEmpty()) {
              logsBuilder_.dispose();
              logsBuilder_ = null;
              logs_ = other.logs_;
              bitField0_ = (bitField0_ & ~0x00000001);
              logsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLogsFieldBuilder() : null;
            } else {
              logsBuilder_.addAllMessages(other.logs_);
            }
          }
        }
        if (other.hasState()) {
          setState(other.getState());
        }
        if (other.hasSolution()) {
          setSolution(other.getSolution());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasState()) {
          return false;
        }
        for (int i = 0; i < getLogsCount(); i++) {
          if (!getLogs(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        icepackai.problem.Problem.SolverResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (icepackai.problem.Problem.SolverResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<icepackai.problem.Problem.SolverInfo> logs_ =
        java.util.Collections.emptyList();
      private void ensureLogsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          logs_ = new java.util.ArrayList<icepackai.problem.Problem.SolverInfo>(logs_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          icepackai.problem.Problem.SolverInfo, icepackai.problem.Problem.SolverInfo.Builder, icepackai.problem.Problem.SolverInfoOrBuilder> logsBuilder_;

      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public java.util.List<icepackai.problem.Problem.SolverInfo> getLogsList() {
        if (logsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(logs_);
        } else {
          return logsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public int getLogsCount() {
        if (logsBuilder_ == null) {
          return logs_.size();
        } else {
          return logsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public icepackai.problem.Problem.SolverInfo getLogs(int index) {
        if (logsBuilder_ == null) {
          return logs_.get(index);
        } else {
          return logsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public Builder setLogs(
          int index, icepackai.problem.Problem.SolverInfo value) {
        if (logsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogsIsMutable();
          logs_.set(index, value);
          onChanged();
        } else {
          logsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public Builder setLogs(
          int index, icepackai.problem.Problem.SolverInfo.Builder builderForValue) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.set(index, builderForValue.build());
          onChanged();
        } else {
          logsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public Builder addLogs(icepackai.problem.Problem.SolverInfo value) {
        if (logsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogsIsMutable();
          logs_.add(value);
          onChanged();
        } else {
          logsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public Builder addLogs(
          int index, icepackai.problem.Problem.SolverInfo value) {
        if (logsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLogsIsMutable();
          logs_.add(index, value);
          onChanged();
        } else {
          logsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public Builder addLogs(
          icepackai.problem.Problem.SolverInfo.Builder builderForValue) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.add(builderForValue.build());
          onChanged();
        } else {
          logsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public Builder addLogs(
          int index, icepackai.problem.Problem.SolverInfo.Builder builderForValue) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.add(index, builderForValue.build());
          onChanged();
        } else {
          logsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public Builder addAllLogs(
          java.lang.Iterable<? extends icepackai.problem.Problem.SolverInfo> values) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, logs_);
          onChanged();
        } else {
          logsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public Builder clearLogs() {
        if (logsBuilder_ == null) {
          logs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          logsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public Builder removeLogs(int index) {
        if (logsBuilder_ == null) {
          ensureLogsIsMutable();
          logs_.remove(index);
          onChanged();
        } else {
          logsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public icepackai.problem.Problem.SolverInfo.Builder getLogsBuilder(
          int index) {
        return getLogsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public icepackai.problem.Problem.SolverInfoOrBuilder getLogsOrBuilder(
          int index) {
        if (logsBuilder_ == null) {
          return logs_.get(index);  } else {
          return logsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public java.util.List<? extends icepackai.problem.Problem.SolverInfoOrBuilder> 
           getLogsOrBuilderList() {
        if (logsBuilder_ != null) {
          return logsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(logs_);
        }
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public icepackai.problem.Problem.SolverInfo.Builder addLogsBuilder() {
        return getLogsFieldBuilder().addBuilder(
            icepackai.problem.Problem.SolverInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public icepackai.problem.Problem.SolverInfo.Builder addLogsBuilder(
          int index) {
        return getLogsFieldBuilder().addBuilder(
            index, icepackai.problem.Problem.SolverInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .problem.SolverInfo logs = 1;</code>
       */
      public java.util.List<icepackai.problem.Problem.SolverInfo.Builder> 
           getLogsBuilderList() {
        return getLogsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          icepackai.problem.Problem.SolverInfo, icepackai.problem.Problem.SolverInfo.Builder, icepackai.problem.Problem.SolverInfoOrBuilder> 
          getLogsFieldBuilder() {
        if (logsBuilder_ == null) {
          logsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              icepackai.problem.Problem.SolverInfo, icepackai.problem.Problem.SolverInfo.Builder, icepackai.problem.Problem.SolverInfoOrBuilder>(
                  logs_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          logs_ = null;
        }
        return logsBuilder_;
      }

      private int state_ = 0;
      /**
       * <code>required .problem.SolverResponse.SolveState state = 2;</code>
       */
      public boolean hasState() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .problem.SolverResponse.SolveState state = 2;</code>
       */
      public icepackai.problem.Problem.SolverResponse.SolveState getState() {
        @SuppressWarnings("deprecation")
        icepackai.problem.Problem.SolverResponse.SolveState result = icepackai.problem.Problem.SolverResponse.SolveState.valueOf(state_);
        return result == null ? icepackai.problem.Problem.SolverResponse.SolveState.WIP : result;
      }
      /**
       * <code>required .problem.SolverResponse.SolveState state = 2;</code>
       */
      public Builder setState(icepackai.problem.Problem.SolverResponse.SolveState value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        state_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .problem.SolverResponse.SolveState state = 2;</code>
       */
      public Builder clearState() {
        bitField0_ = (bitField0_ & ~0x00000002);
        state_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString solution_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes solution = 3;</code>
       */
      public boolean hasSolution() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bytes solution = 3;</code>
       */
      public com.google.protobuf.ByteString getSolution() {
        return solution_;
      }
      /**
       * <code>optional bytes solution = 3;</code>
       */
      public Builder setSolution(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        solution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes solution = 3;</code>
       */
      public Builder clearSolution() {
        bitField0_ = (bitField0_ & ~0x00000004);
        solution_ = getDefaultInstance().getSolution();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:problem.SolverResponse)
    }

    // @@protoc_insertion_point(class_scope:problem.SolverResponse)
    private static final icepackai.problem.Problem.SolverResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new icepackai.problem.Problem.SolverResponse();
    }

    public static icepackai.problem.Problem.SolverResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<SolverResponse>
        PARSER = new com.google.protobuf.AbstractParser<SolverResponse>() {
      @java.lang.Override
      public SolverResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SolverResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SolverResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SolverResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public icepackai.problem.Problem.SolverResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_problem_ProblemEnvelope_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_problem_ProblemEnvelope_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_problem_SolverInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_problem_SolverInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_problem_SolverResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_problem_SolverResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rproblem.proto\022\007problem\"\214\001\n\017ProblemEnve" +
      "lope\022\014\n\004type\030\001 \002(\t\0228\n\007subType\030\002 \002(\0162 .pr" +
      "oblem.ProblemEnvelope.SubType:\005INPUT\022\017\n\007" +
      "content\030\003 \001(\014\" \n\007SubType\022\t\n\005INPUT\020\000\022\n\n\006O" +
      "UTPUT\020\001\"\243\001\n\nSolverInfo\022\024\n\014unixDateTime\030\001" +
      " \002(\003\022\023\n\013infoMessage\030\002 \002(\t\0223\n\004type\030\003 \002(\0162" +
      "%.problem.SolverInfo.SolverMessageType\"5" +
      "\n\021SolverMessageType\022\010\n\004INFO\020\000\022\013\n\007WARNING" +
      "\020\001\022\t\n\005ERROR\020\002\"\252\001\n\016SolverResponse\022!\n\004logs" +
      "\030\001 \003(\0132\023.problem.SolverInfo\0221\n\005state\030\002 \002" +
      "(\0162\".problem.SolverResponse.SolveState\022\020" +
      "\n\010solution\030\003 \001(\014\"0\n\nSolveState\022\007\n\003WIP\020\000\022" +
      "\r\n\tCOMPLETED\020\001\022\n\n\006FAILED\020\002B\023\n\021icepackai." +
      "problem"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_problem_ProblemEnvelope_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_problem_ProblemEnvelope_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_problem_ProblemEnvelope_descriptor,
        new java.lang.String[] { "Type", "SubType", "Content", });
    internal_static_problem_SolverInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_problem_SolverInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_problem_SolverInfo_descriptor,
        new java.lang.String[] { "UnixDateTime", "InfoMessage", "Type", });
    internal_static_problem_SolverResponse_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_problem_SolverResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_problem_SolverResponse_descriptor,
        new java.lang.String[] { "Logs", "State", "Solution", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
